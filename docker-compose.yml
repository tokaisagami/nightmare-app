version: '3.8'

services:
  frontend:
    build:
      context: ./nightmare-app-frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    command: npm run dev -- --host
    environment:
      - NODE_ENV=development
    volumes:
      - ./nightmare-app-frontend:/app
    networks:
      - app-network

  # frontend:
  #   build:
  #     context: ./nightmare-app-next
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   command: npm run dev
  #   environment:
  #     - NODE_ENV=development
  #   volumes:
  #     - ./nightmare-app-next:/app
  #   networks:
  #     - app-network

  backend:
    build:
      context: ./nightmare-app-backend
    ports:
      - "3001:3000"
    environment:
      - RAILS_ENV=development
      - DATABASE_URL=postgres://user:password@db:5432/database_development
    depends_on:
      - db
    volumes:
      - ./nightmare-app-backend:/app
    networks:
      - app-network
    command: ["bash", "-c", "rm -f /app/tmp/pids/server.pid && bundle exec rails s -b '0.0.0.0'"]

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database_development
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:

networks:
  app-network:
